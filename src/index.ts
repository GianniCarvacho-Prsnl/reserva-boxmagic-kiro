// Main entry point for the CrossFit reservation bot
import { ReservationBot } from './core/ReservationBot.js';
import { Logger } from './core/Logger.js';
import { calculateNextReservationTime } from './utils/timing.js';

async function main() {
  const logger = new Logger();
  const bot = new ReservationBot(logger);
  
  // Get schedule ID from command line arguments
  const scheduleId = process.argv[2];

  try {
    console.log('ü§ñ Iniciando CrossFit Reservation Bot...');
    
    // Inicializar el bot
    await bot.initialize('./config.json');
    console.log('‚úÖ Bot inicializado correctamente');

    if (scheduleId) {
      // Modo espec√≠fico: ejecutar una reserva espec√≠fica
      console.log(`üîß Ejecutando reserva con ID: ${scheduleId}...`);
      console.log('‚è∞ El bot calcular√° autom√°ticamente cu√°ndo ejecutar seg√∫n la configuraci√≥n...');
      
      const result = await bot.executeReservation(scheduleId);
      
      console.log('üìä Resultado de la reserva:');
      console.log(`‚úÖ √âxito: ${result.success}`);
      console.log(`üìù Mensaje: ${result.message}`);
      console.log(`‚è±Ô∏è Precisi√≥n de timing: ${result.timingAccuracy}ms`);
      
      if (result.success) {
        console.log('üéâ ¬°Reserva exitosa!');
      } else {
        console.log('‚ö†Ô∏è Reserva no exitosa');
      }
    } else {
      // Modo daemon: ejecutar todas las reservas habilitadas seg√∫n su programaci√≥n
      console.log('üîÑ Modo daemon: monitoreando horarios de reservas...');
      console.log('‚è∞ El bot ejecutar√° autom√°ticamente seg√∫n la configuraci√≥n cron');
      
      // Mantener el proceso corriendo para el modo daemon
      process.on('SIGINT', () => {
        console.log('\nüõë Deteniendo bot...');
        process.exit(0);
      });
      
      // En un entorno real, aqu√≠ habr√≠a un scheduler que ejecutar√≠a las reservas
      // Por ahora solo mantenemos el proceso vivo
      await new Promise(() => {}); // Keep alive
    }
    
  } catch (error) {
    console.error('‚ùå Error en el bot:', error);
    process.exit(1);
  }
}

// Ejecutar solo si es el archivo principal
if (import.meta.url === `file://${process.argv[1]}`) {
  main().catch(console.error);
}

export * from './core/index.js';
export * from './handlers/index.js';
export * from './config/index.js';